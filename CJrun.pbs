#!/bin/bash

#PBS -N deepfri37cuda
#PBS -l select=1:ncpus=20:ngpus=1:mem=180gb
#PBS -l walltime=12:00:00

#PBS -j oe
#PBS -M christopher.jin@unsw.edu.au
#PBS -m ae

cd /srv/scratch/z5312523/deepfri37cuda

source /srv/scratch/z5312523/Miniconda3/etc/profile.d/conda.sh

# conda remove -n py3cuda --all -y
# * [Models](https://users.flatironinstitute.org/~renfrew/DeepFRI_data/trained_models.tar.gz) (use these models if you run DeepFRI on GPU)
# * [Newest Models](https://users.flatironinstitute.org/~renfrew/DeepFRI_data/newest_trained_models.tar.gz) (use these models if you run DeepFRI on CPU)
# #PBS -l select=1:ncpus=4:mem=10gb

conda create --name py37cuda python=3.7
conda activate py37cuda
mkdir models
cd models
wget https://users.flatironinstitute.org/~renfrew/DeepFRI_data/trained_models.tar.gz
cd /srv/scratch/z5312523/deepfri37cuda
git clone https://github.com/flatironinstitute/DeepFRI.git
cd DeepFRI/
tar -xvzf /srv/scratch/z5312523/deepfri37cuda/models/trained_models.tar.gz -C /srv/scratch/z5312523/deepfri37cuda/DeepFRI
pip install .
echo "e.coli"
python predict.py --seq 'GCAAGAAAGGGGGCGGGCGGAAGCGGAAGATGCACGACGGACGGGCGCCGCGGGTGGGTCAGGGGCCCCCGCGCAGGGGGGGGGGGGCCCCCCCCCCCCCGGCCCCACGCGGCCACGGCGCCGCGGCACCGCGGCTCCCGGAGGCCCCCCCCCGCCCCCCGCGGGCGATCCTTTGTTTTTGTACCTCGCCGGCCCAGCGCCCGTCCGGCCCCCCCCCCCCCGGGCGCCGCCGCCCGCATCCCGCCCGCCCCCCCCCCCACCATCAACGGCCGCGGNCCCGCCCGGCTTGGGCCCCCCGGCGGTTGGCCCGGCCGGGGGCCCGGCGGGGGCCCGCCGGGACCCGGCCGTCCATCAGTCCGCGCGCCGCGAGCCCCGGCCGGCGCGGGCCCCCCCAGCCCCCCCCCCCACCCAATGCCGTGCCGTCTCCGCCCCCCCCCCCCCCGCCATACACACGTCGCCCACCGCACCCCCGCCCCCCCCCCCACCCGCGCACACGCACACCCCGGCCCCGGAACCACCAGCCACCCGCCCACGCCCGCCCCTCCACCACCAGTCACCCTCCCCCCCCCGCCCCCCCGACACACCGTCCCGCCCCCCCCCCCGGGCACAACACACCCGACCAACAATCATGACGGCTCCCGTCCCTCGCTCAATCATACCCCCCCGCATGCTGGGCGCGCCGCGGCCCCCCCCCCCCCCCCCCCGCGCGCGGCCCGCCCCCCCCCCCGGGCCCCCACCGCCTGGCCCACCACCCGGCCTCTATGTCTTCGGCCCGCCCGCCCCGCCGCCCCCACCATTGTCCATACGAGGCGGCGGCCCGCCCCGGCCCCCCGGCCCCCCCCCGCCACCGCATGGTCCATTACATCCACCACACGGCTGCCCATTCGGCCACTAGACCGGGGCCGCACCCCCCCCCCCCCCGGGCCCCCCCGCCCGGCCCCCCGCCACCTGCTACGCGGCCGGCCCTCTTGGAGCCCGCCGCCCCGCCGGCCCCACGAGGGGGCCGCCCCCCCGCCCCGGCCCC' -ont mf --verbose

echo "s.aureus"
python predict.py --seq 'GAAAAGGAGGTGGCCACCCCGCATTCGAGCCGGGCCATCGCCCCCCCCCGGGGGCCCCCCCCCCCCCCCCCCCCCCCCCCCGCGCCACTTCGGCGCTCCGGCGGCACCCGCCGTGCCCCCCCCCCCGGGGGCGCCACCCGCCCCGCCCCCCGCCCCAGCCGCCCCACCCCGAGGCCCCGCCCGCCCAGCTCTCCTGGCCCCGCCGCCGCCCCTCCGCATCCCGGCCGCCCCCCCCCCCCACCAGCCCCCCCCCCGGCCGCGCCGCGCACATGCGTCCCGCTCCCCCCCCCCCGCGACCCGCCGCGGGCCCCGCCCGCCCACCCCGCGAGCCGCGGTCCCGCCCCGCCCCGCCGCCACGCGCCCCCGCCCCCCCGGGCCCACCGCCGTCGGTCTGACCCGGCGTGGCCCCCCGCCCGCCGCCCCCACCATCAGCGACCACGCACCGCCCGCGCCCGCCGCGCCGCCGCACCCCCCGCCGCGGCGCCCCCCCCCCGACCCGACGCGCGCCCCCGCCCGCCCCCCCCCACTCGAACGACCCCCCCCGCCCCCCCCGACCCGGACCCGCCGCCGCCGCCGCCCTGAAGCCAGCACCCCCCCGCGCCCCCACCACATGGCAGCCACGGCCCCCCCCCGCCCCGCCCCCCCGCACGGCCCCGACCACCACACCCCGCCCAGACAGCATGGGTCGCCGGCCCCCCCCCCCCCCCCGCCCCACCCCGACACCGGCCCCGACCCGACCACCACCCGGCCCCGCCCGGCCCCCACACCCACGCAGACCACGCTCACCCCTCCCGGTCAGCGCGCAGCTGGGGCGCCCGCCCGCCGGCCGGCCCCCCCCGCCCCGGCCAGCACAGGTCTAAGCTGGCGCCCCCGCACCGCCCCCGCCACCAGCCCGACCCCCGCCGGCCCCCCCGCCACCGCACATATGACTTGGCTAACAGGGCCGCGGCCCGGCCGCCGCCGCCCCCCCCCCCGCCCCACCCCCCCCGACCCCACACCCGACGGGCCCCCGGCCGGCCCCCCG' -ont mf --verbose
